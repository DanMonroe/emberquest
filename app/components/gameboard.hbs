<ModalTarget />
<div class="game">
  <div class="game-container">
    <div class="epm-modal-container {{this.emberGameService.epmModalContainerClass}}">
      <EpmModalContainer />
    </div>
    {{#if this.cookieConfirmed}}
    <div class="header">
      <img src="/images/emberquestlogo.png" class="logo" />

      <div class="game-controls">
        {{#if (or this.emberGameService.showAgentSelector this.emberGameService.thisIsDan)}}
          <div class="testSpawnerControls">
            <button class="btn btn-blue" {{on "click" (fn this.teleport)}}>Teleport</button>
            <div class="mapSelector">
              <select {{on "change" this.setTestMap}}>
                {{#each this.emberGameService.map.mapSelectionObjects as |testMap|}}
                  <option value="{{testMap.map}}">{{testMap.name}}</option>
                {{/each}}
              </select>
            </div>
            <label for="testSpawnerX">X</label>
            <Input type=number @id="testSpawnerX" @value={{this.testSpawnerX}} />
            <label for="testSpawnerY">Y</label>
            <Input type=number @id="testSpawnerY" @value={{this.testSpawnerY}} />
            <div class="agentSelector">
              <select {{on "change" this.setTestAgent}}>
                {{#each this.testAgents as |testAgent|}}
                  <option value="{{testAgent.key}}">{{testAgent.name}}</option>
                {{/each}}
              </select>
            </div>
            <button class="btn btn-blue" {{on "click" (fn this.spawnTestAgent)}}>Spawn</button>
          </div>
        {{/if}}
          <div class="mapDisplayName">{{this.emberGameService.gameManager.getMapDisplayName}}</div>
          <div class="xp-wrapper">
              <span class="xp xp-30{{if this.emberGameService.gameManager.countXP.isRunning " pulse"}}"></span>
              <div class="xp-bar">
                <div class="level">
                  Level {{if this.emberGameService.gameManager.player this.emberGameService.gameManager.player.level "1"}}
                </div>
                <div class="xp-bar-outer">
                  <div class="xp-bar-total" style="width: {{this.emberGameService.gameManager.xpTotalPercentage}}%;"></div>
                  <div class="xp-bar-percent">{{this.emberGameService.gameManager.xpTotalPercentage}}%</div>
                </div>
              </div>
          </div>


          <div class="gem-wrapper">
              <span class="gem gem-30{{if this.emberGameService.gameManager.countGems.isRunning " pulse"}}"></span>
              <span class="gems-count">{{if this.emberGameService.gameManager.player.gold this.emberGameService.gameManager.player.gold " "}}</span>
          </div>
          <button type="button" class="btn inventory" {{on "click" (fn this.showInventory)}} >
            <EmberTooltip tooltipClass="tooltip-controls" >Inventory</EmberTooltip>
          </button>
          <button type="button" class="btn trophy" {{on "click" (fn this.showCaches)}}>
            <EmberTooltip tooltipClass="tooltip-controls" >Geocaches</EmberTooltip>
          </button>
          <button type="button" class="btn messages" {{on "click" (fn this.showGameMessagesDialog)}} >
            <EmberTooltip tooltipClass="tooltip-controls" >Game Messages</EmberTooltip>
          </button>
          <button type="button" class="btn settings" {{on "click" (fn this.showConfigDialog)}} >
            <EmberTooltip tooltipClass="tooltip-controls" >Settings & Help</EmberTooltip>
          </button>
        <PressAndHoldButton
                @btnClass={{"btn empty zoom zoomout"}}
                @iconClass={{"glyphicon glyphicon-zoom-out"}}
                @tooltip={{"Zoom Out"}}
                @incAmount={{-0.1}}
                @press={{perform this.incrementZoomBy}}
                @release={{cancel-all this.incrementZoomBy}}
          />
        <PressAndHoldButton
                @btnClass={{"btn empty zoom reset"}}
                @iconClass={{"glyphicon glyphicon-refresh"}}
                @tooltip={{"Reset Zoom"}}
                @incAmount={{0}}
                @press={{perform this.incrementZoomBy}}
                @release={{cancel-all this.incrementZoomBy}}
          />
        <PressAndHoldButton
                @btnClass={{"btn empty zoom zoomin"}}
                @iconClass={{"glyphicon glyphicon-zoom-in"}}
                @tooltip={{"Zoom In"}}
                @incAmount={{0.1}}
                @press={{perform this.incrementZoomBy}}
                @release={{cancel-all this.incrementZoomBy}}
          />
          <button type="button" class="btn empty volume" {{on "click" (fn this.toggleVolume)}} >
            <div class="glyphicon glyphicon-volume-{{this.volumeCSSClass}}"></div>
            <EmberTooltip tooltipClass="tooltip-controls" >Volume</EmberTooltip>
          </button>

        </div>
      </div>

      <LoadingScene />

      <EmberPhaser
        class="board"
        @phaserContainer="gameContainer"
        @config={{this.config}}
        @onSetup={{fn this.setup}}
        @onTeardown={{fn this.teardown}}
        @ember={{this.emberGameService}}
      />
    {{else}}
      {{#if this.emberGameService.cookieDenied}}
        <div>No cookie</div>
      {{/if}}
    {{/if}}
  </div>

</div>

{{#if this.emberGameService.showInfoConfirmer}}
  <ToElsewhere
        @named={{"modal"}}
        @send={{hash body=(component "confirmation-dialog"
        header=this.emberGameService.showInfoHeader
        prompt=this.emberGameService.showInfoPrompt

        cancelText=this.emberGameService.showInfoCancel
        confirmationText=this.emberGameService.showInfoConfirm
        onConfirm=(action emberGameService.showInfoConfirmer.confirm)
        onCancel=(action emberGameService.showInfoConfirmer.cancel)
  )
     onOutsideClick=(action emberGameService.showInfoConfirmer.cancel)
  }}
  />
{{/if}}

{{#if this.emberGameService.showPausedConfirmer}}
  <ToElsewhere
        @named={{"modal"}}
        @send={{hash body=(component "confirmation-dialog"
        header="Paused"
        prompt="<p>EmberQuest is currently paused.</p>"
        confirmationText="Continue"
        onConfirm=(action emberGameService.showPausedConfirmer.confirm)
        onCancel=(action emberGameService.showPausedConfirmer.cancel)
  )
     onOutsideClick=(action (mut emberGameService.showPausedConfirmer) null)
  }}
  />
{{/if}}
